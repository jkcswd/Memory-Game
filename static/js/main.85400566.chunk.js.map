{"version":3,"sources":["components/Card.js","App.js","index.js"],"names":["Card","props","className","src","imageURl","alt","cardName","onClick","e","shuffleArray","compareCard","App","useState","memoryArray","setMemoryArray","alreadySelectedArray","setAlreadySelectedArray","score","setScore","highScore","setHighScore","useEffect","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","some","element","target","dataset","name","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAmBeA,EAfF,SAACC,GACZ,OACE,qBACEC,UAAU,OADZ,SAGE,qBACEC,IAAKF,EAAMG,SACXC,IAAKJ,EAAMK,SACXC,QAAS,SAACC,GAAOP,EAAMQ,eAAgBR,EAAMS,YAAYF,IACzD,YAAWP,EAAMK,cCsEVK,EA9EH,WACV,MAAsCC,mBAAS,CAC7C,SACA,WACA,QACA,OACA,QACA,WACA,aACA,cACA,UACA,UACA,cACA,UAZF,mBAAOC,EAAP,KAAoBC,EAApB,KAcA,EAAwDF,mBAAS,IAAjE,mBAAOG,EAAP,KAA6BC,EAA7B,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WAEJJ,EAAQE,GAAaC,EAAaH,KACrC,CAACA,EAAOE,IAEX,IAeMV,EAAe,WACnBK,EAAe,YAhBD,SAACQ,GAIf,IAFA,IAAkCC,EAA9BC,EAAeF,EAAMG,OAED,IAAjBD,GAAoB,CACzBD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAFyB,MAImB,CAC1CF,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GAJkB,KAIHF,EAAMC,GAJH,KAQ3B,OAAOD,EAIYO,CAAQhB,MAGvBH,EAAc,SAACF,GACdO,EAAqBe,MAAK,SAAAC,GAAO,OAAIA,IAAYvB,EAAEwB,OAAOC,QAAQC,SAIrEhB,EAAS,GACTF,EAAwB,MAJxBA,EAAwB,GAAD,mBAAKD,GAAL,CAA2BP,EAAEwB,OAAOC,QAAQC,QACnEhB,EAASD,EAAQ,KAOrB,OACE,sBAAKf,UAAU,MAAf,UACE,wDAEE,sBAAKA,UAAU,QAAf,oBAA+Be,EAA/B,iBAAoDE,EAApD,yDAEF,+BACE,qBAAKjB,UAAU,iBAAf,SACGW,EAAYsB,KAAI,SAAAJ,GACf,OACE,cAAC,EAAD,CACEzB,SAAUyB,EACVtB,aAAcA,EACdC,YAAaA,EACbN,SAAQ,kBAAa2B,EAAb,iBAMlB,+DCxENK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.85400566.chunk.js","sourcesContent":["import '../styles/Card.css';\n\nimport React from 'react';\n\nconst Card = (props) => {\n  return (\n    <div \n      className=\"Card\" \n    > \n      <img \n        src={props.imageURl} \n        alt={props.cardName}\n        onClick={(e) => {props.shuffleArray(); props.compareCard(e);}}    \n        data-name={props.cardName} // Use data attribute to access from click event.\n      />\n    </div>\n  )\n}\n\nexport default Card\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport Card from './components/Card';\n\nconst App = () => {\n  const [memoryArray, setMemoryArray] = useState([\n    'Forest',\n    'Mountain',\n    'Swamp',\n    'Lake',\n    'Ocean',\n    'Mangrove',\n    'Coral-Reef',\n    'Hot-Springs',\n    'Volcano',\n    'Savanna',\n    'Rain-Forest',\n    'River'\n  ])\n  const [alreadySelectedArray, setAlreadySelectedArray] = useState([]) // To compare against card clicked.\n  const [score, setScore] = useState(0)\n  const [highScore, setHighScore] = useState(0)\n\n  useEffect(() => {\n    // setting state is async thus must update high score on rerender after state updated.\n    if (score > highScore) { setHighScore(score) }\n  }, [score, highScore]);\n\n  const shuffle = (array) => {\n    // Fisher-Yates shuffle algorithm.\n    let currentIndex = array.length,  randomIndex;\n  \n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      \n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\n  const shuffleArray = () => {\n    setMemoryArray([...shuffle(memoryArray)]) // Spread to trigger rerender as React does not recognize state change.\n  }\n\n  const compareCard = (e) => {\n    if (!alreadySelectedArray.some(element => element === e.target.dataset.name)) {\n      setAlreadySelectedArray([...alreadySelectedArray, e.target.dataset.name]);\n      setScore(score + 1);\n    } else { \n      setScore(0); \n      setAlreadySelectedArray([])\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        Nature Memory Game\n        <div className=\"score\"> Score:{score} | High Score:{highScore}(Max:12) | Do not click on the same image twice!</div>\n      </header>\n      <main>\n        <div className=\"card-container\">\n          {memoryArray.map(element => { // Array randomised by shuffleArray which also triggers new render.\n            return (\n              <Card \n                cardName={element} \n                shuffleArray={shuffleArray}\n                compareCard={compareCard}\n                imageURl={`/images/${element}.jpg`}\n              />\n            )\n          })}\n        </div>\n      </main>\n      <footer>Made by James Spencer</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}